AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  default-vpc-removal-lambda

  This will remove the default vpc and every resource associated to it.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 120

Resources:
  DefaultVPCRemovalFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: default_vpc_removal_lambda/
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
        - Statement:
            - Sid: CreateLogs
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
            - Sid: AllowVPCActions
              Effect: Allow
              Action:
                  - ec2:DeleteSubnet
                  - ec2:DeleteClientVpnEndpoint
                  - ec2:DeleteVpcPeeringConnection
                  - ec2:DeleteVpcEndpoints
                  - ec2:DescribeClientVpnConnections
                  - ec2:DescribeByoipCidrs
                  - ec2:DeleteRouteTable
                  - ec2:DisassociateVpcCidrBlock
                  - ec2:DeleteVpnGateway
                  - ec2:DescribeAccountAttributes
                  - ec2:DeleteInternetGateway
                  - ec2:DescribeNetworkInterfacePermissions
                  - ec2:DeleteVpnConnection
                  - ec2:DescribeNetworkAcls
                  - ec2:DescribeRouteTables
                  - ec2:DescribeClientVpnEndpoints
                  - ec2:DescribeEgressOnlyInternetGateways
                  - ec2:DescribeClientVpnRoutes
                  - ec2:DescribeVpcClassicLinkDnsSupport
                  - ec2:DescribeVpnConnections
                  - ec2:DescribeVpcPeeringConnections
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeClientVpnTargetNetworks
                  - ec2:DetachInternetGateway
                  - ec2:DescribeVpcEndpointServiceConfigurations
                  - ec2:DisassociateRouteTable
                  - ec2:DescribeVpcClassicLink
                  - ec2:DetachVpnGateway
                  - ec2:DescribeVpcEndpointServicePermissions
                  - ec2:DeleteNatGateway
                  - ec2:DescribeVpcEndpoints
                  - ec2:DeleteVpc
                  - ec2:DescribeSubnets
                  - ec2:DeleteNetworkAclEntry
                  - ec2:DescribeVpnGateways
                  - ec2:DescribeAddresses
                  - ec2:DescribeRegions
                  - ec2:DescribeVpcEndpointServices
                  - ec2:DeleteVpcEndpointServiceConfigurations
                  - ec2:DescribeVpcAttribute
                  - ec2:DeleteNetworkInterfacePermission
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeNetworkInterfaceAttribute
                  - ec2:DescribeVpcEndpointConnections
                  - ec2:DeleteNetworkAcl
                  - ec2:DeleteEgressOnlyInternetGateway
                  - ec2:DetachNetworkInterface
                  - ec2:DisassociateClientVpnTargetNetwork
                  - ec2:DeleteRoute
                  - ec2:DescribeNatGateways
                  - ec2:DisassociateSubnetCidrBlock
                  - ec2:DescribeVpcEndpointConnectionNotifications
                  - ec2:DescribeSecurityGroups
                  - ec2:DeleteVpnConnectionRoute
                  - ec2:DeleteVpcEndpointConnectionNotifications
                  - ec2:DeleteCustomerGateway
                  - ec2:DescribeSecurityGroupReferences
                  - ec2:DescribeVpcs
                  - ec2:DeleteClientVpnRoute
                  - ec2:DescribeClientVpnAuthorizationRules
                  - ec2:DescribePublicIpv4Pools
                  - ec2:DeleteSecurityGroup
                  - ec2:DescribeStaleSecurityGroup
                  - ec2:DescribeInternetGateways
              Resource: '*'
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DefaultVPCRemovalFunction:
    Description: "Default VPC Removal Lambda Function ARN"
    Value: !GetAtt DefaultVPCRemovalFunction.Arn
  DefaultVPCRemovalFunctionIamRole:
    Description: "Implicit IAM Role created for Default VPC Removal function"
    Value: !GetAtt DefaultVPCRemovalFunctionRole.Arn
